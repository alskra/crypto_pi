// Colors
@each $key, $value in $colors {
  .#{$key} {
    color: $value !important;
  }

  .#{$key}-bg {
    background: $value !important;
  }
}

// Type
@for $i from 1 through 9 {
  .font-weight-#{$i*100} {
    font-weight: $i*100 !important;
  }
}

.font-family-heading {
  font-family: $font-family-heading;
}

// Display
.visuallyhidden {
  border: 0 !important;
  clip: rect(0, 0, 0, 0) !important;
  height: 1px !important;
  margin: -1px !important;
  overflow: hidden !important;
  padding: 0 !important;
  position: absolute !important;
  width: 1px !important;
  white-space: nowrap !important;
}

// Sizes
.min-w-0 {
  min-width: 0.1px !important;
}

.max-w-none {
  max-width: none !important;
}

@each $key, $value in $grid-breakpoints {
  @if strip-unit($value) == 0 {
    .max-w-#{$key} {
      max-width: map-get($container-max-widths, $key) !important;
    }
  } @else {
    @media (min-width: $value) {
      .max-w-#{$key} {
        max-width: map-get($container-max-widths, $key) !important;
      }
    }
  }
}

// Overflow
.overflow {
  &-hidden {
    overflow: hidden !important;
  }

  &-x-hidden {
    overflow-x: hidden !important;
  }

  &-y-hidden {
    overflow-y: hidden !important;
  }

  &-auto {
    overflow: auto !important;
  }

  &-x-auto {
    overflow-x: auto !important;
  }

  &-y-auto {
    overflow-y: auto !important;
  }
}

// Position
.position-relative {
  position: relative !important;
}

.position-absolute {
  position: absolute !important;
}

.position-fixed {
  position: fixed !important;
}

// Z-index
.z-index-1 {
  z-index: 1 !important;
}

.z-index-2 {
  z-index: 2 !important;
}

.z-index-3 {
  z-index: 3 !important;
}